/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;


import dao.ClienteDAO;
import dao.EstoqueDAO;
import dao.IngredienteDAO;
import dao.IngredienteDaReceitaDAO;
import dao.ProdutoDAO;
import dao.ProdutoDaVendaDAO;
import dao.VendaDAO;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import jdk.nashorn.internal.scripts.JO;
import model.Cliente;
import model.Estoque;
import model.Ingrediente;
import model.IngredienteHasReceita;
import model.Produto;
import model.ProdutoHasVenda;
import model.ProdutoVendaTableModel;
import model.Venda;
import util.Data.ValidaData;

/**
 *
 * @author Daniel Lima
 */
public class CadastroVendaGUI extends javax.swing.JFrame {
    
    public boolean vazio = false;
    Cliente cli;
    ClienteDAO cliDAO;
    Produto prod;
    ProdutoDAO prodDAO;
    Venda vend;
    VendaDAO venDAO;
    EstoqueDAO estDAO;
    ProdutoHasVenda pV;
    ProdutoDaVendaDAO pvDAO;
    IngredienteHasReceita iR;
    IngredienteDaReceitaDAO irDAO;
    IngredienteDAO ingDAO;
    
    private List<Cliente> clientes = new ArrayList<>();
    private List<Cliente> clientesVenda = new ArrayList<>();
    private List<Cliente> clientesConsulta = new ArrayList<>();
    private List<Venda> vendas = new ArrayList<>();
    private List<Produto> produtos = new ArrayList<>();
    private List<Produto> produtosTabela = new ArrayList<>();
    private List<ProdutoHasVenda> qtdProdutosVenda = new ArrayList<>();
     private List<ProdutoHasVenda> produtosVenda = new ArrayList<>();
    private List<IngredienteHasReceita> idsEqntdIngredientes = new ArrayList<>();
    private List<Estoque> estoques = new ArrayList<>();
    /**
     * Creates new form CadastroVenda
     */
    public CadastroVendaGUI() throws Exception {
        initComponents();
        inicializaComboCliente();
        inicializaComboConsultaVenda();
        //populaTable();
        inicializaComboProduto();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblClienteCad = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox<>();
        lblMeioPagamento = new javax.swing.JLabel();
        rdbDinheiro = new javax.swing.JRadioButton();
        rdbCartao = new javax.swing.JRadioButton();
        btnCadastrar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProdutos = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        lblQntdProduto = new javax.swing.JLabel();
        txtQntd = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        rdbAndamento = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        lblDataVenda = new javax.swing.JLabel();
        txtDataVenda = new javax.swing.JFormattedTextField();
        cbProduto = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblVenda = new javax.swing.JLabel();
        cbVendaConsulta = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Venda");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        lblClienteCad.setText("Cliente");

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });

        lblMeioPagamento.setText("Meio de Pagamento");

        buttonGroup1.add(rdbDinheiro);
        rdbDinheiro.setText("D");
        rdbDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbDinheiroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbCartao);
        rdbCartao.setText("C");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        ProdutoVendaTableModel modelo = new ProdutoVendaTableModel();
        tableProdutos.setModel(modelo);
        jScrollPane1.setViewportView(tableProdutos);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblQntdProduto.setText("Qntd");

        lblTotal.setText("Total");

        txtTotal.setEditable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel1.setText("Status");

        buttonGroup2.add(rdbAndamento);
        rdbAndamento.setText("Andamento");

        jLabel2.setText("Produtos");

        lblDataVenda.setText("Data Venda");

        try {
            txtDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataVendaFocusLost(evt);
            }
        });

        cbProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProdutoActionPerformed(evt);
            }
        });

        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTotal)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblQntdProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQntd, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(151, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lblMeioPagamento)
                        .addGap(18, 18, 18)
                        .addComponent(rdbDinheiro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbCartao))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(rdbAndamento))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblClienteCad)
                            .addComponent(lblDataVenda))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(btnAtualizar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClienteCad)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataVenda)
                    .addComponent(txtDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbCartao)
                    .addComponent(rdbDinheiro)
                    .addComponent(lblMeioPagamento)
                    .addComponent(btnAtualizar))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rdbAndamento))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnAlterar)
                    .addComponent(btnCancelar)
                    .addComponent(btnLimpar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnAdicionar)
                    .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQntdProduto)
                    .addComponent(txtQntd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotal))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta"));

        lblVenda.setText("Venda");

        cbVendaConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbVendaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVendaConsultaActionPerformed(evt);
            }
        });

        btnBuscar.setText("Consultar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblVenda)
                .addGap(18, 18, 18)
                .addComponent(cbVendaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVenda)
                    .addComponent(cbVendaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rdbDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbDinheiroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbDinheiroActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if(cbCliente.getSelectedIndex() ==0){
            JOptionPane.showMessageDialog(null,"Selecione um cliente");
        }
            if(txtDataVenda.getText().equals("  /  /    ") || rdbAndamento.isSelected() == false || rdbDinheiro.isSelected() == false && rdbCartao.isSelected() == false){
                JOptionPane.showMessageDialog(null,"Campos vazios ou nao selecionados!!");
            }else{
        
        cli = new Cliente();
        vend = new Venda();
        try {
            defineIdsCliente();
            venDAO = new VendaDAO();
            
            String dataString = txtDataVenda.getText();
            
            DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date dataVendaTemp = new java.sql.Date(fmt.parse(dataString).getTime());
            
            vend.setDataVendas(dataVendaTemp);
            
            boolean pag;
          pag = rdbDinheiro.isSelected();
          if(pag == true){
              vend.setMeioPagamentoVendas(rdbDinheiro.getLabel());
              }
          else{
              vend.setMeioPagamentoVendas(rdbCartao.getLabel());
          }
            
           boolean status;
           status = rdbAndamento.isSelected();
           if(status == true){
               vend.setStatusVendas(rdbAndamento.getLabel());
           }
           
           venDAO.salvar(vend, cli.getIdCliente());
           JOptionPane.showMessageDialog(null,"Venda Cadastrada com sucesso!");
           inicializaComboConsultaVenda();
           inicializaComboCliente();
           limpaCampos();
        } catch (Exception ex) {
            Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
            if(cbVendaConsulta.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(null,"Escolha uma venda!");
            }else{
            vend = new Venda();  
            defineIdsVenda();
        try {
            
            String dataString = txtDataVenda.getText();
            
            DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date dataVendaTemp = new java.sql.Date(fmt.parse(dataString).getTime());
            
            vend.setDataVendas(dataVendaTemp);
            if(rdbCartao.isSelected() == true){
                vend.setMeioPagamentoVendas(rdbCartao.getLabel());
            }else{
                vend.setMeioPagamentoVendas(rdbDinheiro.getLabel());
            }
            
            if(rdbAndamento.isSelected() == true){
                vend.setStatusVendas(rdbAndamento.getLabel());
            
            }
            venDAO = new VendaDAO();
            venDAO.atualizar(vend);
            
            JOptionPane.showMessageDialog(null,"Venda Atualizada com sucesso!");
            inicializaComboConsultaVenda();
            
            }catch (Exception ex) {
                    Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(cbVendaConsulta.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Selecione uma venda!");
        }else{
            limparProdTable();
        try {
            populaTable();
            txtTotal.setText("" + calculaTotal());
            vend = new Venda();
            venDAO = new VendaDAO();
            defineIdsVenda();
            
            venDAO.pesquisar(vend);
            
            SimpleDateFormat formatdata = new SimpleDateFormat("dd/MM/yyyy");     
            txtDataVenda.setText(formatdata.format(vend.getDataVendas()));
            
            switch(vend.getMeioPagamentoVendas()){
            
                case"C":
                    rdbCartao.setSelected(true);
                    break;
                case"D":
                    rdbDinheiro.setSelected(true);
                    break;
            }
            switch(vend.getStatusVendas()){
                case"Andamento":
                    rdbAndamento.setSelected(true);
                    break;
               
            }
            
        } catch (Exception ex) {
            Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        vazio = false;
        if(cbVendaConsulta.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Selecione alguma Venda!!!");
        }else{
            if(cbProduto.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Selecione algum Produto !!");
        }else{
        if(txtQntd.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Quantidade invalida !!");
        }else{
        
        pV = new ProdutoHasVenda();
        try {
            pvDAO = new ProdutoDaVendaDAO();
            prod = new Produto();
            defineIdsProduto();
            
            vend = new Venda();
            defineIdsVenda();
            
            pV.setQtdPrdVenda(Integer.parseInt(txtQntd.getText()));
            
            int qtdExistenteTemp = 0;
            
                qtdExistenteTemp = pvDAO.retornaQtdProdutoExistente(vend,prod);
            
            
            //System.out.println("" + qtdExistenteTemp);

            //System.out.println("" + qtdExistenteTemp);
            
            irDAO = new IngredienteDaReceitaDAO();
            
            idsEqntdIngredientes = irDAO.listaIdEquantidadeIngredientesDoProduto(prod.getIdProduto());
            
            for(IngredienteHasReceita i: idsEqntdIngredientes){
                   estDAO = new EstoqueDAO();
                   estoques = estDAO.consultaIngPeloEstoque(i.getIdIngrediente());
                   
                   if(estoques.size() == 0){
                       vazio = true; 
                   }else{
                    if (estoques.get(0).getQtdEstoque() < i.getReceitaIngredienteQtd() * Integer.parseInt(txtQntd.getText())) {
                        JOptionPane.showMessageDialog(null, "Quantidade de ingrediente insuficiente para este produto!");
                        return;
                    }
                   estDAO = new EstoqueDAO();
                   estDAO.retiraIngEstoque(i.getIdIngrediente(),Integer.parseInt(txtQntd.getText()),i.getReceitaIngredienteQtd());  
                   }
            }
            if(vazio == false){
            if(qtdExistenteTemp == 0){
                
                pvDAO.salvarProdutoDaVenda(prod, vend, pV);
                JOptionPane.showMessageDialog(null,"Produto adicionado"); 
                limparProdTable();
                populaTable();
                
            }else{ 
                 
                pvDAO.atualizarQtd(vend, prod,Integer.parseInt(txtQntd.getText()));
                JOptionPane.showMessageDialog(null,"Produto adicionado"); 
                limparProdTable();
                populaTable();
                }     
            }else{
                JOptionPane.showMessageDialog(null, "Ingredientes do produto nao cadastrado no Estoque!");
            }
            
            calculaTotal();
        } catch (Exception ex) {
            Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
          }
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void cbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbProdutoActionPerformed

    private void cbVendaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVendaConsultaActionPerformed
       
    }//GEN-LAST:event_cbVendaConsultaActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int linha = tableProdutos.getSelectedRow();

        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Produto na tabela !");
        }else{

        ProdutoVendaTableModel modelo = (ProdutoVendaTableModel)tableProdutos.getModel();
        vend = new Venda();
        prod = new Produto();
        defineIdsVenda();
        //defineIdsProduto();
        
        vend.setIdVendas(vend.getIdVendas());
        prod.setIdProduto(Integer.parseInt(modelo.getValueAt(linha,0).toString()));
        
        try {
             
            irDAO = new IngredienteDaReceitaDAO();
            
            idsEqntdIngredientes = irDAO.listaIdEquantidadeIngredientesDoProduto(Integer.parseInt(modelo.getValueAt(linha,0).toString()));
            System.out.println(idsEqntdIngredientes.size());
            
           
            for(IngredienteHasReceita i: idsEqntdIngredientes){
                //System.out.println(i.getReceitaIngredienteQtd() +""+ i.getIdIngrediente());
                
                estDAO = new EstoqueDAO();
                estDAO.repoeIngEstoque(i.getIdIngrediente(),Integer.parseInt(modelo.getValueAt(linha,3).toString()),i.getReceitaIngredienteQtd());
                System.out.println("recolocado no estoque");
            }
            
            pvDAO = new ProdutoDaVendaDAO();
            pvDAO.excluirProduto(vend,prod);
            
            modelo.removeRow(linha);
                JOptionPane.showMessageDialog(null, "Produto excluido com sucesso");
            calculaTotal();
           
        } catch (Exception ex) {
            Logger.getLogger(CadastroUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        } 
        
        //limpaCampos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        
        if(cbVendaConsulta.getSelectedIndex() == 0 ){
            JOptionPane.showMessageDialog(null,"Selecione uma Venda!");
        }else{
        
           try {
        vend = new Venda();       
        defineIdsVenda();
        
        pV = new ProdutoHasVenda();
        
        pvDAO = new ProdutoDaVendaDAO();
        
        prodDAO = new ProdutoDAO();
        prod = new Produto();
        
               //System.out.println(vend.getIdVendas());
        produtosVenda = pvDAO.listaProdutosVenda(vend.getIdVendas());
        
        for(ProdutoHasVenda pV: produtosVenda){
            irDAO = new IngredienteDaReceitaDAO();
            idsEqntdIngredientes = irDAO.listaIdEquantidadeIngredientesDoProduto(pV.getIdProduto());
            for(IngredienteHasReceita i: idsEqntdIngredientes){
                estDAO = new EstoqueDAO();
                estDAO.repoeIngEstoque(i.getIdIngrediente(),pV.getQtdPrdVenda(),i.getReceitaIngredienteQtd());
            }
        }
                int opcao =  JOptionPane.showConfirmDialog(null,"Deseja realmente cancelar a venda ?");
                    if(opcao == 0){
               venDAO = new VendaDAO();
               venDAO.excluir(vend);
               limparProdTable();
               
               JOptionPane.showMessageDialog(null,"Venda Cancelada com Sucesso");
               inicializaComboConsultaVenda();
                    }
           } catch (Exception ex) {
               Logger.getLogger(CadastroProdutoGUI.class.getName()).log(Level.SEVERE, null, ex);
           }
       
        }
              
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limpaCampos();
        limparProdTable();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtDataVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataVendaFocusLost
        if(!txtDataVenda.getText().equals("  /  /    ")){
              if(!ValidaData.validaData(txtDataVenda.getText())){
                  JOptionPane.showMessageDialog(null,"Data invalida");
                  txtDataVenda.setText("");
                  txtDataVenda.requestFocus();
                //  System.out.println("" + txtDataValidade.getText()); 
              }
           }
    }//GEN-LAST:event_txtDataVendaFocusLost

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            inicializaComboCliente();
            inicializaComboConsultaVenda();
            inicializaComboProduto();
            vazio = false;
        } catch (Exception ex) {
            Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed
public final void inicializaComboCliente() throws Exception {
        DefaultComboBoxModel comboCliente = new DefaultComboBoxModel();
        comboCliente.addElement("Selecione Cliente");
        cliDAO = new ClienteDAO();
        cli = new Cliente();
        clientes = cliDAO.listaTodosClientes(cli);
        for (Cliente c : clientes) {
            comboCliente.addElement(c.getNomeCliente() + " " + c.getSobreNomeCliente() + " CPF :" + c.getCpfCliente());
        }
        cbCliente.setModel(comboCliente);
        //decidir se vai setar 0 ou nao
        //cbClientes.setSelectedIndex(0);
    }
public final void inicializaComboConsultaVenda() throws Exception {
        DefaultComboBoxModel comboConsultaVenda = new DefaultComboBoxModel();
        comboConsultaVenda.addElement("Selecione a Venda");
        venDAO = new VendaDAO();
        vend = new Venda();
        cli = new Cliente();
        
        
        vendas = venDAO.listaTodasVendas(vend);
        

        for(Venda v: vendas){
            cliDAO = new ClienteDAO();
            clientesConsulta = cliDAO.consultaClienteID(v.getIdCliente());
            for(Cliente c: clientesConsulta){
                 
                 comboConsultaVenda.addElement("Nome :" +c.getNomeCliente() + " " + c.getSobreNomeCliente() + " Data Venda :" + v.getDataVendas());
            }
        }

            cbVendaConsulta.setModel(comboConsultaVenda);
        //decidir se vai setar 0 ou nao
        //cbClientes.setSelectedIndex(0);
    }
 private void defineIdsCliente(){
     int ind = cbCliente.getSelectedIndex();
        if (ind < 1) {
            cli = null;
            return;
        }
        ind--;
        cli = clientes.get(ind);
        //System.out.println(rece.getIdReceita());
    }
    private void defineIdsVenda(){
     int ind = cbVendaConsulta.getSelectedIndex();
        if (ind < 1) {
            vend = null;
            return;
        }
        ind--;
        vend = vendas.get(ind);
        //System.out.println(rece.getIdReceita());
    }
    public void inicializaComboProduto() throws Exception{
        DefaultComboBoxModel comboProduto = new DefaultComboBoxModel();
        comboProduto.addElement("Selecione o Produto");
        prodDAO = new ProdutoDAO();
        prod = new Produto();
        produtos = prodDAO.listaTodosProdutos(prod);
        for (Produto p : produtos) {
            comboProduto.addElement(" Nome : " + p.getNomeProduto() + " Preço : " + p.getPrecoProduto());
        }
        cbProduto.setModel(comboProduto);
    }
    private void defineIdsProduto(){
     int ind = cbProduto.getSelectedIndex();
        if (ind < 1) {
            prod = null;
            return;
        }
        ind--;
        prod = produtos.get(ind);
        //System.out.println(rece.getIdReceita());
    }
    
    private double calculaTotal() throws Exception{
        vend = new Venda();
        defineIdsVenda();
        double tempTotal = 0;
        pvDAO = new ProdutoDaVendaDAO();
        prodDAO = new ProdutoDAO();
        prod = new Produto();
        produtosTabela = prodDAO.listaProdutoAdd(vend.getIdVendas());
        
        pV = new ProdutoHasVenda();
        qtdProdutosVenda = pvDAO.listaQntdProduto(vend.getIdVendas());
        for(int i = 0 ; i < produtosTabela.size() ; i++){
            prod.setPrecoProduto(produtosTabela.get(i).getPrecoProduto());
            pV.setQtdPrdVenda(qtdProdutosVenda.get(i).getQtdPrdVenda());
            
            //System.out.println("" + prod.getPrecoProduto() * pV.getQtdPrdVenda());
            tempTotal = tempTotal + prod.getPrecoProduto() * pV.getQtdPrdVenda();
        }
        return tempTotal;
    }
    
    private void populaTable() throws Exception{
        
        vend = new Venda();
        
        defineIdsVenda();
        
        ProdutoVendaTableModel modelo = (ProdutoVendaTableModel)tableProdutos.getModel();
        
        pvDAO = new ProdutoDaVendaDAO();
        prodDAO = new ProdutoDAO();
        prod = new Produto();
        
        produtosTabela = prodDAO.listaProdutoAdd(vend.getIdVendas());
        
        pV = new ProdutoHasVenda();
        
        qtdProdutosVenda = pvDAO.listaQntdProduto(vend.getIdVendas());
        for(int i = 0 ; i < produtosTabela.size() ; i++){
            prod.setIdProduto(produtosTabela.get(i).getIdProduto());
            prod.setNomeProduto(produtosTabela.get(i).getNomeProduto());
            prod.setPrecoProduto(produtosTabela.get(i).getPrecoProduto());
            pV.setQtdPrdVenda(qtdProdutosVenda.get(i).getQtdPrdVenda());
            
            modelo.addRow(new Produto(prod.getIdProduto(),prod.getNomeProduto(),prod.getPrecoProduto()),new ProdutoHasVenda(pV.getQtdPrdVenda()));
        }
//        for(int i =0 ; i < produtosTabela.size() ; i++){
//            System.out.println(produtosTabela.get(i).getNomeProduto() + qtdProdutosVenda.get(i).getQtdPrdVenda());
//        }
        
    }
    public void limparProdTable() {
        ProdutoVendaTableModel modelo = (ProdutoVendaTableModel)tableProdutos.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
}
}
    public void limpaCampos(){
        txtDataVenda.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        txtQntd.setText("");
        txtTotal.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new CadastroVendaGUI().setVisible(true);
//                    
//                } catch (Exception ex) {
//                    Logger.getLogger(CadastroVendaGUI.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JComboBox<String> cbProduto;
    private javax.swing.JComboBox<String> cbVendaConsulta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblClienteCad;
    private javax.swing.JLabel lblDataVenda;
    private javax.swing.JLabel lblMeioPagamento;
    private javax.swing.JLabel lblQntdProduto;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblVenda;
    private javax.swing.JRadioButton rdbAndamento;
    private javax.swing.JRadioButton rdbCartao;
    private javax.swing.JRadioButton rdbDinheiro;
    private javax.swing.JTable tableProdutos;
    private javax.swing.JFormattedTextField txtDataVenda;
    private javax.swing.JTextField txtQntd;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
